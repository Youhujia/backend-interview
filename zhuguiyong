1.冒泡排序

public class no1 {
	
		public static void main(String[] args) {
			 
			int[] arr = {9, 38, 5, 97, 76, -13, 27, 49, -78, 34, -1};
	 
	        for (int i = 0; i < arr.length; i++) {
	            for (int j = i; j < arr.length; j++) {
	 
	                if (arr[i] > arr[j]) {
	                    int tmp = arr[i];
	                    arr[i] = arr[j];
	                    arr[j] = tmp;
	                }
	            }
	            System.out.print(arr[i]+" ");
	        }
	 
	        
	    }
	}

2链表
public class ArrayList implements Collection {  
      
    Object[] objects = new Object[10];  
    int index = 0;  
    public void add(Object o) {  
        if(index == objects.length) {  
            Object[] newObjects = new Object[objects.length * 2];  
            System.arraycopy(objects, 0, newObjects, 0, objects.length);  
            objects = newObjects;  
        }  
        objects[index] = o;  
        index ++;  
    }  
      
    public int size() {  
        return index;  
    }  
      
    public Iterator iterator() {  
          
        return new ArrayListIterator();  
    }  
      
    private class ArrayListIterator implements Iterator {  
        private int currentIndex = 0;  
  
        @Override  
        public boolean hasNext() {  
            if(currentIndex >= index) return false;  
            else return true;  
        }  
  
        @Override  
        public Object next() {  
            Object o = objects[currentIndex];  
            currentIndex ++;  
            return o;  
        }  
          
    }  
}  

//Iterator
public interface Iterator {  
      
    Object next();  
    boolean hasNext();  
} 
	//Collection
  
  public interface Collection {  
  
    void add(Object obj);  
    int size();  
    Iterator iterator();  
}  

//node
public class Node {  
      
    private Object data;  
    private Node next;  
      
    public Node(Object data, Node next) {  
        super();  
        this.data = data;  
        this.next = next;  
    }  
      
    public Object getData() {  
        return data;  
    }  
    public void setData(Object data) {  
        this.data = data;  
    }  
    public Node getNext() {  
        return next;  
    }  
    public void setNext(Node next) {  
        this.next = next;  
    }  
      
}  
//LinkedList

public class LinkedList implements Collection {  
    Node head = null;  
    Node tail = null;  
    int size = 0;  
    public void add(Object o) {  
        Node n = new Node(o, null);  
        if(head == null) {  
            head = n;  
            tail = n;  
        }  
        tail.setNext(n);  
        tail = n;  
        size ++;  
    }  
      
    public int size() {  
        return size;  
    }  
  
    @Override  
    public Iterator iterator() {  
        return new LinkedListIterator();  
    }  
      
    private class LinkedListIterator implements Iterator{  
  
        private Node currentNode = head;  
        private int nextIndex = 0;  
          
        @Override  
        public Object next() {  
              
            Object data = currentNode.getData();  
            currentNode = currentNode.getNext();  
            nextIndex ++;  
            return data;  
        }  
  
        @Override  
        public boolean hasNext() {  
              
            return nextIndex != size;  
        }  
          
    }  
      
      
}  
//test
public class Test {  
  
    public static void main(String[] args) {  
          
        Collection c = new LinkedList();  
          
        for(int i=0; i<6; i++){  
            c.add("链表-"+i);  
        }  
          
        System.out.println(c.size());  
          
        Iterator it = c.iterator();  
        while(it.hasNext()) {  
            Object o = it.next();  
            System.out.print(o + " ");  
        }  
        }  
    
}  

3数据库
-- 最近,魔拜单车火遍了微信朋友圈，也火遍了帝都街头。假如你是「魔拜单车」公司的
-- 架构师，请设计 MySQL 风格的数据表结构，满足以下场景：
-- 1. 用户的基本信息；
 create table Users(
uid varchar(20),
uname varchar(30),
usex  varchar(30),
uaddress varchar(20)
)

-- 2. 用户使用微信登录；
 create table weixin(
wphone varchar(20),
wuname varchar(30),
wusex  varchar(30),
wuaddress varchar(20)
)

-- 3. 用户使用邮箱登录；
 create table mail(
mphone varchar(20),
muname varchar(30),
musex  varchar(30),
muaddress varchar(20)
)
-- 4. 用户使用手机号登录；
 create table Tphone(
phone varchar(20),
name varchar(30),
sex  varchar(30),
address varchar(20)
)
-- 5. 单车的基本信息；
 create table mobike(
mid varchar(20),
mlocation varchar(30),
mstate  varchar(30)
)
-- 6. 用户充值记录；
 create table recharge(
uid varchar(20),
rje varchar(30),--充值金额
rtime  varchar(30),--充值时间
rye varchar(20) --余额
)
-- 7. 用户骑行记录；
 create table cycling(
ctime varchar(20),
clength varchar(30),  --骑行距离
)
-- 8. 单车每天的 GPS 位置记录。
 create table Gps(
uid varchar(20),
mlocation varchar(30),
)
